PKGNAME radare
VERSION 1.5.2
CONTACT pancake ; pancake@youterm.com

LANG_C!
LANG_CXX


(( optional plugins ))
LANG_RUBY
ARG_WITH HAVE_RUBY ruby build with embedded ruby extension ;

CHECK_ENDIAN
USE_DL
USE_PKGCONFIG

SOLARIS = 0 ;
DARWIN = 0 ;
IFEQ HOST_OS sunos ; { SOLARIS = 1 ; }
IFEQ HOST_OS solaris ; { SOLARIS = 1 ; }
IFEQ HOST_OS darwin ; { 
	DARWIN = 1 ; 
	SHARED_EXT = dylib ;
	SHARED_CFLAGS = -dynamiclib ;
}{
	SHARED_EXT = so ;
	SHARED_CFLAGS = -fPIC -shared ;
}
IFEQ HOST_OS mingw ; { WINDOWS = 1 ; }
IFEQ WINDOWS 1 ; {
	SHARED_EXT = dll ;
}

(( Check for the GNU readline library ))
ARG_WITHOUT READLINE readline disables the readline support ;
CHKFNC readline rl_completion_matches
RADARE_LIBS = '' ;
HAVE_LIB_READLINE = 0 ;
IF HAVE_RL_COMPLETION_MATCHES {
	HAVE_LIB_READLINE = 1 ;
        RADARE_LIBS = -lreadline ;
}
IFNOT READLINE { HAVE_LIB_READLINE = 0 ; }

(( usb sniffer ))
CHKINC usb.h
ARG_WITHOUT USBSNF usb-sniffer disables the build of the libusb sniffer ;
IFNOT HAVE_USB_H { USBSNF = 0 ; }

(( acr option flags ))
ARG_WITHOUT NONFREE nonfree disables the build of non-free sourcefiles ;
ARG_WITHOUT DEBUGGER debugger disables the debugger layer ;
ARG_WITH JAVA java builds the java api ;
ARG_WITH WII wii builds the wii plugin for usbgecko ;
ARG_ENABLE W32 w32 enables the build of w32 version using mingw32 ;

ARG_WITH SYSPROXY sysproxy builds the syscall proxy plugin ;

CHKPRG INSTALL install
((
 This is required for Solaris (and maybe other)
 ==============================================
 CHKPRG GINSTALL ginstall
 IFNOTNULL GINSTALL { INSTALL ${GINSTALL} }
))

ARG_WITHOUT VALA vala disables the build of all the vala-dependant parts ;
CHKPRG VALAC valac
CHKVER vala-1.0 0.5.0
(( temporary fix to avoid vala ))
IFNOT HAVE_VALA_1_0_VERSION_0_5_0 {
	ECHO Needs vala 0.5.0 at least ;
	HAVE_VALAC = 0
	VALAC = '' ;
}
((
IFEQ VALAC valac ; {
	WITH_VALA = 0 ;
	VALA = 0 ;
	HAVE_GUI = 0 ;
	ECHO No valac found ;
}
))

(( Check off_t size ))
_CFLAGS = $CFLAGS ;
CFLAGS += -include /usr/include/sys/types.h
          -D_GNU_SOURCE -D_FILE_OFFSET_BITS=64 ;
SIZEOF_OFF_T = 1 ;
SIZEOF off_t ;
CFLAGS = $_CFLAGS ;

CHKLIB ewf
ARG_WITHOUT WANT_EWF ewf disable EWF dependency ;
IFNOT WANT_EWF { HAVE_LIB_EWF = 0 ; }

(( PERL  ))
LANG_PERL
CHECK_PERL_MODULE ExtUtils::Embed
ARG_WITH HAVE_PERL perl build with embedded perl extension ;
IFNOT HAVE_PM_EXTUTILSEMBED { HAVE_PERL = 0 ; }

(( PYTHON ))
LANG_PYTHON
ARG_WITH HAVE_PYTHON python build with embedded python extension ;

CHKLIB python2.5
CHKLIB python2.6
CHKLIB python2.7

ARG_WITH MAEMO maemo build hildon interface ;

(( HAVE_GUI ))
ARG_WITHOUT HAVE_GUI gui radare without the gtk frontend ;
((
CHKPRG GTKDIALOG gtkdialog
IFEQ GTKDIALOG gtkdialog ; {
	ECHO You will need gtkdialog for the gui ;
}
))
PKGCFG GTK_FLAGS GTK_LIBS gtk+-2.0
IFNULL GTK_FLAGS { HAVE_GUI = 0 ; }
PKGCFG VTE_FLAGS VTE_LIBS vte
IFNULL VTE_FLAGS { HAVE_GUI = 0 ; }

HAVE_VALAC = 1 ;
HAVE_VALA = 1 ;
VALAC = 1 ;
IFNOT HAVE_GUI {
	VALAC = 0 ;
	HAVE_VALA = 0 ;
	ECHO Vala build disabled, no gtk-dev or libvte-dev found ;
}

CHKINC lua.h
LANG_LUA

REPORT HAVE_GUI WII LUA_LIBS HAVE_LIB_LUA MAEMO VALA JAVA USBSNF SYSPROXY DEBUGGER HAVE_LIB_EWF HAVE_LIB_READLINE ;

(( subdirectories ))
SUBDIRS . ./global.h ./config.mk src src/rsc/rsc src/rfile ;

(( end-of-file ))

((
  ERR = 0 ;
  IFNOTEQ SIZEOF_OFF_T 8 ; ERR = 1 ;
  DIE ERR Radare requires a 64 bit POSIX OS to work properly ;
))
